plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.ksp
    alias libs.plugins.kotlin.serialization
}

android {
    namespace 'rdx.works.core'
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
        buildConfigField "boolean", "CRASH_REPORTING_ENABLED", "false"
    }

    buildTypes {
        debug {
        }
        debugAlpha {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "CRASH_REPORTING_ENABLED", "true"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "CRASH_REPORTING_ENABLED", "false"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    afterEvaluate {
        tasks.configureEach { task ->
            if (task.name.contains("Test") && task.name.contains("compile")) {
                kotlinOptions.freeCompilerArgs += '-Xopt-in=com.radixdlt.sargon.annotation.UsesSampleValues'
            }
        }
    }
}

dependencies {
    api libs.sargonAndroid
    implementation libs.ktorCore
    implementation libs.zxing
    implementation libs.kotlinxSerialization
    implementation libs.firebaseCrashlytics
    implementation libs.immutableCollections
    implementation libs.crypto

    // Datastore
    implementation libs.datastorePreferences

    // Hilt
    implementation libs.hilt
    ksp libs.hiltCompiler

    implementation platform(libs.okhttpBom)
    implementation libs.okhttp

    testImplementation libs.junit
    testRuntimeOnly libs.sargonDesktop
    androidTestImplementation libs.androidXJunit
    androidTestImplementation libs.espresso
}
