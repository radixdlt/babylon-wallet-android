plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id "org.sonarqube" version "3.0"
    id "jacoco"
    id 'kotlinx-serialization'
}

apply from: "$rootDir/config/detekt.gradle"
apply from: "$rootDir/config/jacoco.gradle"

import io.gitlab.arturbosch.detekt.Detekt

android {
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        applicationId "com.babylon.wallet.android"
        minSdk 27
        targetSdk rootProject.ext.targetSdk
        versionCode 4
        versionName "1.23.4"
        buildConfigField "boolean", "DEBUG_MODE", "true"
        buildConfigField "String", "GATEWAY_API_URL", '"https://hammunet-gateway.radixdlt.com"'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion rootProject.ext.kotlinCompilerExtensionVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property 'sonar.projectKey', 'radixdlt_babylon-wallet-android'
        property 'sonar.projectName', 'babylon-wallet-android'
        property 'sonar.organization', 'radixdlt-github'
        property 'sonar.androidLint.reportPaths', 'build/reports/lint-results-debug.xml'
        property 'sonar.kotlin.detekt.reportPaths', 'build/reports/detekt/debug.xml'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
    }
}

tasks.withType(Detekt).configureEach {
    exclude("**/test/**")
    exclude("**/androidTest/**")
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"
    implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha03'
    implementation "androidx.compose.ui:ui:1.3.1"
    implementation "androidx.compose.runtime:runtime:1.3.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.1"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:1.3.1"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.compose.material3:material3:1.0.1'
    implementation 'androidx.compose.material3:material3-window-size-class:1.1.0-alpha02'

    implementation("org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5")

    // Accompanist
    implementation 'com.google.accompanist:accompanist-swiperefresh:0.27.0'
    implementation 'com.google.accompanist:accompanist-pager:0.27.0'
    implementation 'com.google.accompanist:accompanist-pager-indicators:0.27.0'
    implementation 'com.google.accompanist:accompanist-drawablepainter:0.27.0'

    // Datastore
    implementation 'androidx.datastore:datastore-preferences:1.0.0'

    // Hilt
    implementation 'com.google.dagger:hilt-android:2.44.1'
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt 'com.google.dagger:hilt-android-compiler:2.44.1'

    // Biometric
    implementation 'androidx.biometric:biometric-ktx:1.2.0-alpha05'

    // Coil
    implementation('io.coil-kt:coil-compose:2.2.2')

    // KotlinX serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1"

    //Retrofit & OkHttp
    implementation platform('com.squareup.okhttp3:okhttp-bom:4.10.0')
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'

    //Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Peerdroid
    implementation project(path: ':peerdroid')

    implementation project(path: ':designsystem')

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:4.0.0'
    testImplementation 'org.mockito:mockito-inline:4.8.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.3.1'

    debugImplementation 'androidx.compose.ui:ui-tooling:1.3.1'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.3.1'
}
