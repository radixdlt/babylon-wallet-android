/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.model


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * The ledger state against which the response was generated. Can be used to detect if the Network Gateway is returning up-to-date information. 
 *
 * @param network The name of the network against which the request is made.
 * @param stateVersion The state version of the ledger. Each transaction increments the state version by 1.
 * @param proposerRoundTimestamp The round timestamp of the consensus round when this transaction was committed to ledger. This is not guaranteed to be strictly increasing, as it is computed as an average across the validator set. If this is significantly behind the current timestamp, the Network Gateway is likely reporting out-dated information, or the network has stalled. 
 * @param epoch The epoch number of the ledger at this state version.
 * @param round The consensus round in the epoch that this state version was committed in.
 */
@Serializable

data class LedgerState (

    /* The name of the network against which the request is made. */
    @SerialName(value = "network")
    val network: kotlin.String,

    /* The state version of the ledger. Each transaction increments the state version by 1. */
    @SerialName(value = "state_version")
    val stateVersion: kotlin.Long,

    /* The round timestamp of the consensus round when this transaction was committed to ledger. This is not guaranteed to be strictly increasing, as it is computed as an average across the validator set. If this is significantly behind the current timestamp, the Network Gateway is likely reporting out-dated information, or the network has stalled.  */
    @SerialName(value = "proposer_round_timestamp")
    val proposerRoundTimestamp: kotlin.String,

    /* The epoch number of the ledger at this state version. */
    @SerialName(value = "epoch")
    val epoch: kotlin.Long,

    /* The consensus round in the epoch that this state version was committed in. */
    @SerialName(value = "round")
    val round: kotlin.Long

)

