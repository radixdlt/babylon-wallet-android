/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName

/**
 * 
 *
 * @param manifest A text-representation of a transaction manifest
 * @param startEpochInclusive An integer between `0` and `10^10`, marking the epoch at which the transaction starts being valid
 * @param endEpochExclusive An integer between `0` and `10^10`, marking the epoch at which the transaction is no longer valid
 * @param tipPercentage An integer between `0` and `255`, giving the validator tip as a percentage amount. A value of `1` corresponds to 1% of the fee.
 * @param nonce A decimal-string-encoded integer between `0` and `2^64 - 1`, used to ensure the transaction intent is unique.
 * @param signerPublicKeys A list of public keys to be used as transaction signers
 * @param flags 
 * @param blobsHex An array of hex-encoded blob data (optional)
 * @param notaryPublicKey 
 * @param notaryIsSignatory Whether the notary should count as a signatory (optional, default false)
 */
@Serializable

data class TransactionPreviewRequest (

    /* A text-representation of a transaction manifest */
    @SerialName(value = "manifest")
    val manifest: kotlin.String,

    /* An integer between `0` and `10^10`, marking the epoch at which the transaction starts being valid */
    @SerialName(value = "start_epoch_inclusive")
    val startEpochInclusive: kotlin.Long,

    /* An integer between `0` and `10^10`, marking the epoch at which the transaction is no longer valid */
    @SerialName(value = "end_epoch_exclusive")
    val endEpochExclusive: kotlin.Long,

    /* An integer between `0` and `255`, giving the validator tip as a percentage amount. A value of `1` corresponds to 1% of the fee. */
    @SerialName(value = "tip_percentage")
    val tipPercentage: kotlin.Int,

    /* A decimal-string-encoded integer between `0` and `2^64 - 1`, used to ensure the transaction intent is unique. */
    @SerialName(value = "nonce")
    val nonce: kotlin.Long,

    /* A list of public keys to be used as transaction signers */
    @SerialName(value = "signer_public_keys")
    val signerPublicKeys: kotlin.collections.List<PublicKey>,

    @SerialName(value = "flags")
    val flags: TransactionPreviewRequestFlags,

    /* An array of hex-encoded blob data (optional) */
    @SerialName(value = "blobs_hex")
    val blobsHex: kotlin.collections.List<kotlin.String>? = null,

    @SerialName(value = "notary_public_key")
    val notaryPublicKey: PublicKey? = null,

    /* Whether the notary should count as a signatory (optional, default false) */
    @SerialName(value = "notary_is_signatory")
    val notaryIsSignatory: kotlin.Boolean? = null

)

