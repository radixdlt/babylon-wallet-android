/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models

import com.babylon.wallet.android.data.gateway.generated.models.TransactionPreviewResponseLogsInner

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param encodedReceipt Hex-encoded binary blob.
 * @param receipt This type is defined in the Core API as `TransactionReceipt`. See the Core API documentation for more details. 
 * @param resourceChanges 
 * @param logs 
 */
@Serializable

data class TransactionPreviewResponse (

    /* Hex-encoded binary blob. */
    @SerialName(value = "encoded_receipt")
    val encodedReceipt: kotlin.String,

    /* This type is defined in the Core API as `TransactionReceipt`. See the Core API documentation for more details.  */
    @Contextual @SerialName(value = "receipt")
    val receipt: CoreApiTransactionReceipt,

//    @SerialName(value = "resource_changes")
//    val resourceChanges: kotlin.collections.List<@Contextual kotlin.Any>,

    @SerialName(value = "logs")
    val logs: kotlin.collections.List<TransactionPreviewResponseLogsInner>

)

/**
 * A bit different from [TransactionReceipt] since [TransactionPreviewResponse] returns the core api object.
 */
@Serializable
data class CoreApiTransactionReceipt (

    /* The status of the transaction. */
    @SerialName(value = "status")
    val status: String,

    /* Fees paid, Only present if the `status` is not `Rejected`. */
    @SerialName(value = "fee_summary")
    val feeSummary: FeeSummary? = null,

    @SerialName(value = "costing_parameters")
    val costingParameters: CostingParameters? = null,

    /* Error message (only present if status is `Failed` or `Rejected`) */
    @SerialName(value = "error_message")
    val errorMessage: kotlin.String? = null

) {

    val isFailed
        get() = status == "Failed" || status == "Rejected"

}
