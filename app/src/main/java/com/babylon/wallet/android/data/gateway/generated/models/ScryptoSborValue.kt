/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param rawHex 
 * @param programmaticJson 
 */
@Serializable

data class ScryptoSborValue (

    @SerialName(value = "raw_hex")
    val rawHex: kotlin.String,

    @SerialName(value = "programmatic_json")
    val programmaticJson: ProgrammaticJson? = null,

) {
    @Serializable
    data class ProgrammaticJson(
        @SerialName(value = "kind")
        val kind: String,

        @SerialName(value = "type_name")
        val type_name: String? = null,

        @SerialName(value = "fields")
        val fields: List<Field>
    ) {

        @Serializable
        data class Field(
            @SerialName(value = "kind")
            val kind: String? = null,

            @SerialName(value = "type_name")
            val type_name: String? = null,

            @SerialName(value = "field_name")
            val field_name: String? = null,

            @SerialName(value = "value")
            val value: String? = null,
        ) {
            // If kind is type of array we assume its complex
            private val isKindComplex: Boolean
                get() = kind == MetadataValueType.boolArray.value ||
                        kind == MetadataValueType.u8Array.value ||
                        kind == MetadataValueType.u32Array.value ||
                        kind == MetadataValueType.u64Array.value ||
                        kind == MetadataValueType.i32Array.value ||
                        kind == MetadataValueType.i64Array.value ||
                        kind == MetadataValueType.decimalArray.value ||
                        kind == MetadataValueType.globalAddressArray.value ||
                        kind == MetadataValueType.publicKeyArray.value ||
                        kind == MetadataValueType.nonFungibleGlobalIdArray.value ||
                        kind == MetadataValueType.nonFungibleLocalIdArray.value ||
                        kind == MetadataValueType.instantArray.value ||
                        kind == MetadataValueType.urlArray.value ||
                        kind == MetadataValueType.originArray.value ||
                        kind == MetadataValueType.publicKeyHashArray.value


            val valueContent: String?
                get() = if (isKindComplex) COMPLEX else value

            companion object {
                private const val COMPLEX = "[Complex]"
            }
        }
    }
}

