/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models


import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * A more specific intent status. See the description field for further information. Note that `CommitPendingOutcomeUnknown` can either result in `CommittedSuccess` or `CommittedFailure`. 
 *
 * Values: Unknown,CommittedSuccess,CommittedFailure,CommitPendingOutcomeUnknown,PermanentlyRejected,LikelyButNotCertainRejection,Pending
 */
@Serializable
enum class TransactionIntentStatus(val value: kotlin.String) {

    @SerialName(value = "Unknown")
    Unknown("Unknown"),

    @SerialName(value = "CommittedSuccess")
    CommittedSuccess("CommittedSuccess"),

    @SerialName(value = "CommittedFailure")
    CommittedFailure("CommittedFailure"),

    @SerialName(value = "CommitPendingOutcomeUnknown")
    CommitPendingOutcomeUnknown("CommitPendingOutcomeUnknown"),

    @SerialName(value = "PermanentlyRejected")
    PermanentlyRejected("PermanentlyRejected"),

    @SerialName(value = "LikelyButNotCertainRejection")
    LikelyButNotCertainRejection("LikelyButNotCertainRejection"),

    @SerialName(value = "Pending")
    Pending("Pending");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is TransactionIntentStatus) "$data" else null

        /**
         * Returns a valid [TransactionIntentStatus] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): TransactionIntentStatus? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

