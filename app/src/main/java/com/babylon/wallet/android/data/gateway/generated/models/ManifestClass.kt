/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models


import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * High-level manifest class type:   * `General`: A general manifest that involves any amount of arbitrary components and packages where nothing more concrete can be said about the manifest and its nature.   * `Transfer`: A manifest of a 1-to-1 transfer to a one-to-many transfer of resources.   * `PoolContribution`: A manifest that contributed some amount of resources to a liquidity pool that can be a one-resource pool, two-resource pool, or a multi-resource pool.   * `PoolRedemption`: A manifest that redeemed resources from a liquidity pool. Similar to contributions, this can be any of the three pool blueprints available in the pool package.   * `ValidatorStake`: A manifest where XRD is staked to one or more validators.   * `ValidatorUnstake`: A manifest where XRD is unstaked from one or more validators.   * `ValidatorClaim`: A manifest where XRD is claimed from one or more validators.   * `AccountDepositSettingsUpdate`: A manifest that updated the deposit settings of the account. 
 *
 * Values: General,Transfer,PoolContribution,PoolRedemption,ValidatorStake,ValidatorUnstake,ValidatorClaim,AccountDepositSettingsUpdate
 */
@Serializable
enum class ManifestClass(val value: kotlin.String) {

    @SerialName(value = "General")
    General("General"),

    @SerialName(value = "Transfer")
    Transfer("Transfer"),

    @SerialName(value = "PoolContribution")
    PoolContribution("PoolContribution"),

    @SerialName(value = "PoolRedemption")
    PoolRedemption("PoolRedemption"),

    @SerialName(value = "ValidatorStake")
    ValidatorStake("ValidatorStake"),

    @SerialName(value = "ValidatorUnstake")
    ValidatorUnstake("ValidatorUnstake"),

    @SerialName(value = "ValidatorClaim")
    ValidatorClaim("ValidatorClaim"),

    @SerialName(value = "AccountDepositSettingsUpdate")
    AccountDepositSettingsUpdate("AccountDepositSettingsUpdate");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ManifestClass) "$data" else null

        /**
         * Returns a valid [ManifestClass] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ManifestClass? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

