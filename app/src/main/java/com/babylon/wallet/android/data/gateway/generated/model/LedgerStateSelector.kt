/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.model


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * Optional. This allows for a request to be made against a historic state. If a constraint is specified, the Gateway will resolve the request against the ledger state at that time. If not specified, requests will be made with respect to the top of the committed ledger. 
 *
 * @param stateVersion If provided, the latest ledger state lower than or equal to the given state version is returned.
 * @param timestamp If provided, the latest ledger state lower than or equal to the given round timestamp is returned.
 * @param epoch If provided, the ledger state lower than or equal to the given epoch at round 0 is returned.
 * @param round If provided must be accompanied with `epoch`, the ledger state lower than or equal to the given epoch and round is returned.
 */
@Serializable

data class LedgerStateSelector (

    /* If provided, the latest ledger state lower than or equal to the given state version is returned. */
    @SerialName(value = "state_version")
    val stateVersion: kotlin.Long? = null,

    /* If provided, the latest ledger state lower than or equal to the given round timestamp is returned. */
    @Contextual @SerialName(value = "timestamp")
    val timestamp: java.time.OffsetDateTime? = null,

    /* If provided, the ledger state lower than or equal to the given epoch at round 0 is returned. */
    @SerialName(value = "epoch")
    val epoch: kotlin.Long? = null,

    /* If provided must be accompanied with `epoch`, the ledger state lower than or equal to the given epoch and round is returned. */
    @SerialName(value = "round")
    val round: kotlin.Long? = null

)

