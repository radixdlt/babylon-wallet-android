/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models


import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * 
 *
 * Values: Xrd,PackageOwnerBadge,AccountOwnerBadge,IdentityOwnerBadge,ValidatorOwnerBadge,Secp256k1SignatureResource,Ed25519SignatureResource,GlobalCallerResource,PackageOfDirectCallerResource,SystemExecutionResource,ValidatorLiquidStakeUnit,ValidatorClaimNft,OneResourcePoolUnit,TwoResourcePoolUnit,MultiResourcePoolUnit,AccessControllerRecoveryBadge
 */
@Serializable
enum class NativeResourceKind(val value: kotlin.String) {

    @SerialName(value = "Xrd")
    Xrd("Xrd"),

    @SerialName(value = "PackageOwnerBadge")
    PackageOwnerBadge("PackageOwnerBadge"),

    @SerialName(value = "AccountOwnerBadge")
    AccountOwnerBadge("AccountOwnerBadge"),

    @SerialName(value = "IdentityOwnerBadge")
    IdentityOwnerBadge("IdentityOwnerBadge"),

    @SerialName(value = "ValidatorOwnerBadge")
    ValidatorOwnerBadge("ValidatorOwnerBadge"),

    @SerialName(value = "Secp256k1SignatureResource")
    Secp256k1SignatureResource("Secp256k1SignatureResource"),

    @SerialName(value = "Ed25519SignatureResource")
    Ed25519SignatureResource("Ed25519SignatureResource"),

    @SerialName(value = "GlobalCallerResource")
    GlobalCallerResource("GlobalCallerResource"),

    @SerialName(value = "PackageOfDirectCallerResource")
    PackageOfDirectCallerResource("PackageOfDirectCallerResource"),

    @SerialName(value = "SystemExecutionResource")
    SystemExecutionResource("SystemExecutionResource"),

    @SerialName(value = "ValidatorLiquidStakeUnit")
    ValidatorLiquidStakeUnit("ValidatorLiquidStakeUnit"),

    @SerialName(value = "ValidatorClaimNft")
    ValidatorClaimNft("ValidatorClaimNft"),

    @SerialName(value = "OneResourcePoolUnit")
    OneResourcePoolUnit("OneResourcePoolUnit"),

    @SerialName(value = "TwoResourcePoolUnit")
    TwoResourcePoolUnit("TwoResourcePoolUnit"),

    @SerialName(value = "MultiResourcePoolUnit")
    MultiResourcePoolUnit("MultiResourcePoolUnit"),

    @SerialName(value = "AccessControllerRecoveryBadge")
    AccessControllerRecoveryBadge("AccessControllerRecoveryBadge");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is NativeResourceKind) "$data" else null

        /**
         * Returns a valid [NativeResourceKind] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): NativeResourceKind? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

