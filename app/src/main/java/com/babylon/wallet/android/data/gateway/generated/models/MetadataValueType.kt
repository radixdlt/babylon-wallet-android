/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models


import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * 
 *
 * Values: string,bool,u8,u32,u64,i32,i64,decimal,globalAddress,publicKey,nonFungibleGlobalId,nonFungibleLocalId,instant,url,origin,publicKeyHash,stringArray,boolArray,u8Array,u32Array,u64Array,i32Array,i64Array,decimalArray,globalAddressArray,publicKeyArray,nonFungibleGlobalIdArray,nonFungibleLocalIdArray,instantArray,urlArray,originArray,publicKeyHashArray
 */
@Serializable
enum class MetadataValueType(val value: kotlin.String) {

    @SerialName(value = "String")
    string("String"),

    @SerialName(value = "Bool")
    bool("Bool"),

    @SerialName(value = "U8")
    u8("U8"),

    @SerialName(value = "U32")
    u32("U32"),

    @SerialName(value = "U64")
    u64("U64"),

    @SerialName(value = "I32")
    i32("I32"),

    @SerialName(value = "I64")
    i64("I64"),

    @SerialName(value = "Decimal")
    decimal("Decimal"),

    @SerialName(value = "GlobalAddress")
    globalAddress("GlobalAddress"),

    @SerialName(value = "PublicKey")
    publicKey("PublicKey"),

    @SerialName(value = "NonFungibleGlobalId")
    nonFungibleGlobalId("NonFungibleGlobalId"),

    @SerialName(value = "NonFungibleLocalId")
    nonFungibleLocalId("NonFungibleLocalId"),

    @SerialName(value = "Instant")
    instant("Instant"),

    @SerialName(value = "Url")
    url("Url"),

    @SerialName(value = "Origin")
    origin("Origin"),

    @SerialName(value = "PublicKeyHash")
    publicKeyHash("PublicKeyHash"),

    @SerialName(value = "StringArray")
    stringArray("StringArray"),

    @SerialName(value = "BoolArray")
    boolArray("BoolArray"),

    @SerialName(value = "U8Array")
    u8Array("U8Array"),

    @SerialName(value = "U32Array")
    u32Array("U32Array"),

    @SerialName(value = "U64Array")
    u64Array("U64Array"),

    @SerialName(value = "I32Array")
    i32Array("I32Array"),

    @SerialName(value = "I64Array")
    i64Array("I64Array"),

    @SerialName(value = "DecimalArray")
    decimalArray("DecimalArray"),

    @SerialName(value = "GlobalAddressArray")
    globalAddressArray("GlobalAddressArray"),

    @SerialName(value = "PublicKeyArray")
    publicKeyArray("PublicKeyArray"),

    @SerialName(value = "NonFungibleGlobalIdArray")
    nonFungibleGlobalIdArray("NonFungibleGlobalIdArray"),

    @SerialName(value = "NonFungibleLocalIdArray")
    nonFungibleLocalIdArray("NonFungibleLocalIdArray"),

    @SerialName(value = "InstantArray")
    instantArray("InstantArray"),

    @SerialName(value = "UrlArray")
    urlArray("UrlArray"),

    @SerialName(value = "OriginArray")
    originArray("OriginArray"),

    @SerialName(value = "PublicKeyHashArray")
    publicKeyHashArray("PublicKeyHashArray");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is MetadataValueType) "$data" else null

        /**
         * Returns a valid [MetadataValueType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): MetadataValueType? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

