/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models


import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * Check detailed [OptIns](#section/Using-endpoints-with-opt-in-features) documentation for more details
 *
 * @param ancestorIdentities if set to `true`, ancestor addresses - `parent_address`, `owner_address` and `global_address` for entities are returned.
 * @param componentRoyaltyConfig if set to `true`, `royalty_config` for component entities is returned.
 * @param componentRoyaltyVaultBalance if set to `true`, `royalty_vault_balance` for component entities is returned.
 * @param packageRoyaltyVaultBalance if set to `true`, `royalty_vault_balance` for package entities is returned.
 * @param nonFungibleIncludeNfids if set to `true`, first page of non fungible ids are returned for each non fungible resource, with `next_cursor` which can be later used at `/state/entity/page/non-fungible-vault/ids` endpoint.
 * @param explicitMetadata allows specifying explicitly metadata properties which should be returned in response.
 * @param dappTwoWayLinks if set to `true`, on-ledger dApp two-way links (resolved & verified) are returned. See https://docs.radixdlt.com/docs/metadata-for-verification for more details.
 * @param nativeResourceDetails if set to `true`, additional details for the Network native resources are returned.
 */
@Serializable

data class StateEntityDetailsOptIns (

    /* if set to `true`, ancestor addresses - `parent_address`, `owner_address` and `global_address` for entities are returned. */
    @SerialName(value = "ancestor_identities")
    val ancestorIdentities: kotlin.Boolean? = false,

    /* if set to `true`, `royalty_config` for component entities is returned. */
    @SerialName(value = "component_royalty_config")
    val componentRoyaltyConfig: kotlin.Boolean? = false,

    /* if set to `true`, `royalty_vault_balance` for component entities is returned. */
    @SerialName(value = "component_royalty_vault_balance")
    val componentRoyaltyVaultBalance: kotlin.Boolean? = false,

    /* if set to `true`, `royalty_vault_balance` for package entities is returned. */
    @SerialName(value = "package_royalty_vault_balance")
    val packageRoyaltyVaultBalance: kotlin.Boolean? = false,

    /* if set to `true`, first page of non fungible ids are returned for each non fungible resource, with `next_cursor` which can be later used at `/state/entity/page/non-fungible-vault/ids` endpoint. */
    @SerialName(value = "non_fungible_include_nfids")
    val nonFungibleIncludeNfids: kotlin.Boolean? = false,

    /* allows specifying explicitly metadata properties which should be returned in response. */
    @SerialName(value = "explicit_metadata")
    val explicitMetadata: kotlin.collections.List<kotlin.String>? = null,

    /* if set to `true`, on-ledger dApp two-way links (resolved & verified) are returned. See https://docs.radixdlt.com/docs/metadata-for-verification for more details. */
    @SerialName(value = "dapp_two_way_links")
    val dappTwoWayLinks: kotlin.Boolean? = false,

    /* if set to `true`, additional details for the Network native resources are returned. */
    @SerialName(value = "native_resource_details")
    val nativeResourceDetails: kotlin.Boolean? = false

)

