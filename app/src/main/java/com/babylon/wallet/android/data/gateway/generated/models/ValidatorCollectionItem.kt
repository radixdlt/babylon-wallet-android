/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.babylon.wallet.android.data.gateway.generated.models

import com.babylon.wallet.android.data.gateway.generated.models.EntityMetadataCollection
import com.babylon.wallet.android.data.gateway.generated.models.ValidatorCollectionItemActiveInEpoch
import com.babylon.wallet.android.data.gateway.generated.models.ValidatorCollectionItemEffectiveFeeFactor
import com.babylon.wallet.android.data.gateway.generated.models.ValidatorVaultItem

import kotlinx.serialization.Serializable
import kotlinx.serialization.SerialName
import kotlinx.serialization.Contextual

/**
 * 
 *
 * @param address Bech32m-encoded human readable version of the address.
 * @param stakeVault 
 * @param pendingXrdWithdrawVault 
 * @param lockedOwnerStakeUnitVault 
 * @param pendingOwnerStakeUnitUnlockVault 
 * @param state Validator inner state representation. This type is defined in the Core API as `ValidatorFieldStateValue`. See the Core API documentation for more details. 
 * @param metadata 
 * @param effectiveFeeFactor 
 * @param activeInEpoch 
 */
@Serializable

data class ValidatorCollectionItem (

    /* Bech32m-encoded human readable version of the address. */
    @SerialName(value = "address")
    val address: kotlin.String,

    @SerialName(value = "stake_vault")
    val stakeVault: ValidatorVaultItem,

    @SerialName(value = "pending_xrd_withdraw_vault")
    val pendingXrdWithdrawVault: ValidatorVaultItem,

    @SerialName(value = "locked_owner_stake_unit_vault")
    val lockedOwnerStakeUnitVault: ValidatorVaultItem,

    @SerialName(value = "pending_owner_stake_unit_unlock_vault")
    val pendingOwnerStakeUnitUnlockVault: ValidatorVaultItem,

    /* Validator inner state representation. This type is defined in the Core API as `ValidatorFieldStateValue`. See the Core API documentation for more details.  */
    @Contextual @SerialName(value = "state")
    val state: kotlin.Any?,

    @SerialName(value = "metadata")
    val metadata: EntityMetadataCollection,

    @SerialName(value = "effective_fee_factor")
    val effectiveFeeFactor: ValidatorCollectionItemEffectiveFeeFactor,

    @SerialName(value = "active_in_epoch")
    val activeInEpoch: ValidatorCollectionItemActiveInEpoch? = null

)

