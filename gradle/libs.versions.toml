[versions]
androidxCore = "1.17.0"
androidxLifecycle = "2.9.3"
compose = "1.9.1"
composeConstraintLayout = "1.1.1"
activity = "1.11.0"
appcompat = "1.7.1"
composeNavigation = "2.9.4"
detektGradlePlugin = "1.23.8"
material = "1.13.0"
composeMaterial3 = "1.3.2"
material3WindowSizeClass = "1.3.2"
materialIconsExtended = "1.7.8"
orgJacocoCore = "0.8.13"
splash = "1.0.1"
immutableCollections = "0.4.0"
accompanist = "0.37.3"
accompanistPlaceholder = "0.36.0"
datastorePreferences = "1.1.7"
hilt = "2.57.1"
hiltNavigation = "1.3.0"
biometricKtx = "1.2.0-alpha05"
coilCompose = "2.7.0"
kotlinxSerialization = "1.9.0"
sargon = "1.2.31-589f644b"
okhttpBom = "5.1.0"
retrofit = "3.0.0"
retrofitKoltinxConverter = "1.0.0"
timber = "5.0.1"
barcode = "17.3.0"
camera = "1.5.0"
rootCheck = "0.1.1"
room = "2.8.0"
junit = "4.13.2"
mockk = "1.14.5"
coroutinesTest = "1.10.2"
mockitoKotlin = "6.0.0"
mockitoInline = "5.2.0"
androidXJunit = "1.3.0"
kotlinTestJunit = "1.9.22"
espresso = "3.7.0"
espressoIntents = "3.7.0"
composeUiTestJunit = "1.9.1"
composeUiTooling = "1.9.1"
ktor = "3.2.3"
slf4j = "2.0.17"
turbine = "1.2.1"
zxing = "3.5.3"
apacheCommonsValidator = "1.9.0"
jsonAssert = "1.5.3"
firebaseCrashlytics = "20.0.1"
appsFlyer = "6.17.3"
installReferrer = "2.2"
playServicesAuth = "21.4.0"
googleApiClient = "2.8.1"
googleApiServicesDrive = "v3-rev20240123-2.0.0"
workManagerRuntimeKtx = "2.10.4"
androidXHiltWorker = "1.3.0"
androidApplicationPlugin = "8.12.3"
androidLibraryPlugin = "8.12.3"
kotlin = "2.2.0"
kspPlugin = "2.2.0-2.0.2"
benManesVersionsPlugin = "0.52.0"
versionCatalogUpdatePlugin = "1.0.0"
googleServicesPlugin = "4.4.3"
firebaseCrashlyticsPlugin = "3.0.6"
hiltPlugin = "2.57.1"
sonarqubePlugin = "6.3.1.5724"
markdown = "0.35.0"
palette = "1.0.0"
browser = "1.9.0"

[libraries]
androidxCore = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
detektGradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detektGradlePlugin" }
lifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
lifecycleViewmodelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
lifecycleViewModelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
lifecycelRuntimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
composeUi = { module = "androidx.compose.ui:ui", version.ref = "compose" }
composeRuntime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
composeConstraintLayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "composeConstraintLayout" }
activity = { module = "androidx.activity:activity", version.ref = "activity" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
material = { module = "com.google.android.material:material", version.ref = "material" }
composeMaterial3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
material3WindowSizeClass = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "material3WindowSizeClass" }
materialIconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
orgJacocoCore = { module = "org.jacoco:org.jacoco.core", version.ref = "orgJacocoCore" }
splash = { module = "androidx.core:core-splashscreen", version.ref = "splash" }
immutableCollections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutableCollections" }
accompanistDrawablePainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanistPermissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanistPlaceholder = { module = "com.google.accompanist:accompanist-placeholder", version.ref = "accompanistPlaceholder" }
ktorCore = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktorOkhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktorSerialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktorJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorLogging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
datastorePreferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hiltNavigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltNavigation" }
hiltCompiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
biometricKtx = { module = "androidx.biometric:biometric-ktx", version.ref = "biometricKtx" }
coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
coilComposeSvg = { module = "io.coil-kt:coil-svg", version.ref = "coilCompose" }
coilComposeGif = { module = "io.coil-kt:coil-gif", version.ref = "coilCompose" }
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
sargonAndroid = { module = "com.radixdlt.sargon:sargon-android", version.ref = "sargon" }
sargonDesktop = { module = "com.radixdlt.sargon:sargon-desktop-bins", version.ref = "sargon" }
okhttpBom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttpBom" }
okhttp = { module = "com.squareup.okhttp3:okhttp" }
okhttpInterceptor = { module = "com.squareup.okhttp3:logging-interceptor" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitKoltinxConverter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofitKoltinxConverter" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
barcode = { module = "com.google.mlkit:barcode-scanning", version.ref = "barcode" }
cameraCore = { module = "androidx.camera:camera-core", version.ref = "camera" }
camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
cameraLifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }
cameraView = { module = "androidx.camera:camera-view", version.ref = "camera" }
rootCheck = { module = "com.scottyab:rootbeer-lib", version.ref = "rootCheck" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
junit = { module = "junit:junit", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
mockitoInline = { module = "org.mockito:mockito-inline", version.ref = "mockitoInline" }
androidXJunit = { module = "androidx.test.ext:junit", version.ref = "androidXJunit" }
kotlinTestJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinTestJunit" }
espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espressoIntents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espressoIntents" }
composeUiTestJunit = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeUiTestJunit" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeUiTooling" }
composeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }
slf4j = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
zxing = { module = "com.google.zxing:core", version.ref = "zxing" }
apacheCommonsValidator = { module = "commons-validator:commons-validator", version.ref = "apacheCommonsValidator" }
jsonAssert = { module = "org.skyscreamer:jsonassert", version.ref = "jsonAssert" }
firebaseCrashlytics = { module = "com.google.firebase:firebase-crashlytics", version.ref = "firebaseCrashlytics" }
appsFlyer = { module = "com.appsflyer:af-android-sdk", version.ref = "appsFlyer" }
installReferrer = { module = "com.android.installreferrer:installreferrer", version.ref = "installReferrer" }
playServicesAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
googleApiClient = { module = "com.google.api-client:google-api-client-android", version.ref = "googleApiClient" }
googleApiServicesDrive = { module = "com.google.apis:google-api-services-drive", version.ref = "googleApiServicesDrive" }
workManagerRuntimeKtx = { module = "androidx.work:work-runtime-ktx", version.ref = "workManagerRuntimeKtx" }
androidXHiltWorker = { module = "androidx.hilt:hilt-work", version.ref = "androidXHiltWorker" }
androidXHiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidXHiltWorker" }
lifeCycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidxLifecycle" }
markdown = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "markdown" }
palette = { module = "androidx.palette:palette", version.ref = "palette" }
browser = { module = "androidx.browser:browser", version.ref = "browser" }

[plugins]
android-application = { id = "com.android.application", version.ref = "androidApplicationPlugin" }
android-library = { id = "com.android.library", version.ref = "androidLibraryPlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ben-manes-versions = { id = "com.github.ben-manes.versions", version.ref = "benManesVersionsPlugin" }
version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdatePlugin" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServicesPlugin" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltPlugin" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqubePlugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "kspPlugin" }