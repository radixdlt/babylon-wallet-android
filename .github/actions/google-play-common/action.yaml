name: Download tools, fetch secrets and distribute

description: Common steps for release trigger

inputs:
  gpc_track:
    description: 'Google Play Console track. So far either alpha or production.'
    required: true
  radix_bot_username:
    description: 'Git user to push commit with new app number.'
    required: true
  gpr_user:
    description: 'User to fetch dependecies from another repository.'
    required: true
  gpr_token:
    description: 'User credentials to fetch dependecies from another repository.'
    required: true
  role_name:
    description: 'IAM role name to use for fetching secrets.'
    required: true

runs:
  using: 'composite'
  steps:
  - name: Dump context
    uses: RDXWorks-actions/ghaction-dump-context@master

  - name: Download Ruby (action)
    uses: RDXWorks-actions/setup-ruby@master
    with:
      ruby-version: '3.1.2'
      bundler-cache: true

  - uses: RDXWorks-actions/setup-java@main
    with:
      distribution: 'zulu' # See 'Supported distributions' for available options
      java-version: '17'

  - name: Fetch Keystore credentials
    uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
    with:
      role_name: '${{ inputs.role_name }}'
      app_name: 'babylon-wallet-android'
      step_name: 'release'
      secret_prefix: 'GH'
      secret_name: "github-actions/radixdlt/babylon-wallet-android/google-play-console/secrets"
      parse_json: true

  - name: Fetch AppsFlyer credentials
    uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
    with:
      role_name: '${{ inputs.role_name }}'
      app_name: 'wallet-android-flyers'
      step_name: 'release'
      secret_prefix: 'GH'
      secret_name: "github-actions/radixdlt/babylon-wallet-android/apps-flyer-secret"
      parse_json: true

  - name: Fetch Google service account credentials
    uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
    with:
      role_name: '${{ inputs.role_name }}'
      app_name: 'babylon-wallet-android-sa'
      step_name: 'release'
      secret_prefix: 'GH_GOOGLE_SERVICE_ACCOUNT_JSON_FILE'
      secret_name: "github-actions/radixdlt/babylon-wallet-android/google-play-console/service-account-json-file"
      parse_json: false

  - name: Fetch keystore.asc value
    uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
    with:
      role_name: '${{ inputs.role_name }}'
      app_name: 'babylon-wallet-android-sa'
      step_name: 'release'
      secret_prefix: 'GH_KEYSTORE_ENCRYPTED_BASE64'
      secret_name: "github-actions/radixdlt/babylon-wallet-android/google-play-console/keystore-asc"
      parse_json: false

  - name: Output AppsFlyer secret to file
    shell: bash
    run: |
      mkdir -p config/secrets/
      echo "appsFlyerDevKey=${{ env.GH_APPS_FLYER_DEV_KEY }}" > config/secrets/secrets.properties

  - name: Decode release keystore credentials
    shell: bash
    run: |
      mkdir -p config/signing/release
      echo "${{ env.GH_KEYSTORE_ENCRYPTED_BASE64 }}" > keystore.asc
      gpg -d --passphrase "${{ env.GH_KEYSTORE_PASSPHRASE }}" --batch keystore.asc > config/signing/release/keystore.jks

      echo "keyAlias=${{ env.GH_KEYSTORE_ALIAS }}" > config/signing/release/keystore.properties
      echo "keyPassword=${{ env.GH_KEYSTORE_KEY_PASSWORD }}" >> config/signing/release/keystore.properties
      echo "storeFile=../config/signing/release/keystore.jks" >> config/signing/release/keystore.properties
      echo "storePassword=${{ env.GH_KEYSTORE_PASSWORD }}" >> config/signing/release/keystore.properties

  - name: Set commit branch for release
    shell: bash
    run: |
      echo "RELEASE_BRANCH=${{ github.event.release.target_commitish }}" >> $GITHUB_ENV

  - name: Distribute to Google Play ${{ inputs.gpc_track }}
    shell: bash
    run: |
      track=${{ inputs.gpc_track }}
      git config user.name $GIT_USER
      git config user.email $GIT_USER
      bundle exec fastlane deployRelease track:$track
      echo "### Distributed to Google Play ${{ inputs.gpc_track }} track! :rocket:" >> $GITHUB_STEP_SUMMARY
    env:
      GIT_USER: ${{ inputs.radix_bot_username }}
      GPR_USER: ${{ inputs.gpr_user }}
      GPR_TOKEN: ${{ inputs.gpr_token }}
      RELEASE_BRANCH: ${{ env.RELEASE_BRANCH }}
      GOOGLE_PLAY_DEPLOYER_JSON_FILE: ${{ env.GH_GOOGLE_SERVICE_ACCOUNT_JSON_FILE }}
