name: "Test and build"

on:
  pull_request:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:

  cancel:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@b173b6ec0100793626c2d9e6b90435061f4fc3e5

  snyk_scan_deps_licences:
    name: "Snyk deps/licenses"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Fetch Snyk credentials
        uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: 'arn:aws:iam::308190735829:role/gh-common-secrets-read-access'
          app_name: 'wallet-android'
          step_name: 'snyk-licenses'
          secret_prefix: 'SNYK'
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/common/snyk-credentials"
          parse_json: true

      - name: Run Snyk to check for deps vulnerabilities
        uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
        with:
          args: --all-projects --org=${{ env.SNYK_COREAPPS_ORG_ID }} --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}

  snyk_scan_code:
    name: "Snyk code"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      
      - name: Fetch Snyk credentials
        uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: 'arn:aws:iam::308190735829:role/gh-common-secrets-read-access'
          app_name: 'wallet-android'
          step_name: 'snyk-licenses'
          secret_prefix: 'SNYK'
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/common/snyk-credentials"
          parse_json: true

      - name: Run Snyk to check for code vulnerabilities
        uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
        with:
          args: --all-projects --org=${{ env.SNYK_COREAPPS_ORG_ID }} --severity-threshold=high
          command: code test
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}

  snyk_sbom:
    name: "Snyk SBOM"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Fetch Snyk credentials
        uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: 'arn:aws:iam::308190735829:role/gh-common-secrets-read-access'
          app_name: 'wallet-android'
          step_name: 'snyk-licenses'
          secret_prefix: 'SNYK'
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/common/snyk-credentials"
          parse_json: true

      - name: Generate SBOM # check SBOM can be generated but nothing is done with it
        uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
        with:
          args: --all-projects --org=${{ env.SNYK_COREAPPS_ORG_ID  }} --format=cyclonedx1.4+json --json-file-output sbom.json
          command: sbom
        env:
          SNYK_TOKEN: ${{ env.SNYK_TOKEN }}

  # unit_tests:
  #   name: "Unit tests"
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu' # See 'Supported distributions' for available options
  #         java-version: '17'

  #     - name: "Run unit tests"
  #       run: ./gradlew testDebugUnitTest
  #       env:
  #         GPR_USER: ${{ secrets.GPR_USER }}
  #         GPR_TOKEN: ${{ secrets.GPR_TOKEN }}

  # static_analysis:
  #   name: "Static analysis and SonarCloud"
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #     - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
  #       with:
  #         fetch-depth: 0

  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu' # See 'Supported distributions' for available options
  #         java-version: '17'

  #     - name: Export vars
  #       run: |
  #         echo "GPR_USER=${{ secrets.GPR_USER }}" >> $GITHUB_ENV
  #         echo "GPR_TOKEN=${{ secrets.GPR_TOKEN }}" >> $GITHUB_ENV
  #         echo "SONAR_TOKEN=${{ secrets.BABYLON_WALLET_ANDROID_SONAR_TOKEN }}" >> $GITHUB_ENV

  #     - name: "Run detekt"
  #       run: |
  #         env
  #         ./gradlew detektMain

  #     - name: "Run jacoco"
  #       run: |
  #         ./gradlew jacocoTestReport

  #     - name: "Run Sonarcloud"
  #       run: |
  #         ./gradlew sonarqube

  # build:
  #   name: "Build"
  #   runs-on: ubuntu-latest

  #   needs:
  #     - unit_tests
  #     - static_analysis
  #     - snyk_scan_deps_licences
  #     - snyk_scan_code
  #     - snyk_sbom

  #   steps:
  #     - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

  #     - name: Dump context
  #       uses: crazy-max/ghaction-dump-context@516dbb0c760f39b4cdd750ae095f1688780f68f4

  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu' # See 'Supported distributions' for available options
  #         java-version: '17'

  #     - name: "Build"
  #       run: |
  #         ./gradlew assembleDebug
  #       env:
  #         GPR_USER: ${{ secrets.GPR_USER }}
  #         GPR_TOKEN: ${{ secrets.GPR_TOKEN }}

  #     - name: Upload APK from PR
  #       if: ${{ github.event_name == 'pull_request' }}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ github.event.number }}
  #         path: app/build/outputs/apk/debugPreview/
  #         retention-days: 1

  # snyk_online_monitor:
  #   name: "Snyk monitoring"
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   needs:
  #     - build
  #   steps:
  #     - uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
  #     - name: Enable Snyk online monitoring to check for vulnerabilities
  #       uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
  #       with:
  #         args: --all-projects --org=${{ secrets.SNYK_ORG_ID }}
  #         command: monitor
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
