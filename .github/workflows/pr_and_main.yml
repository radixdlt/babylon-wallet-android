name: "Test and build"

on:
  pull_request:
  push:
    #branches:
    #  - main

jobs:

  cancel:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@b173b6ec0100793626c2d9e6b90435061f4fc3e5

  snyk-deps-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: Run Snyk to check for deps vulnerabilities
        uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
        with:
          args: --org=${{ secrets.SNYK_ORG_ID }} --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  snyk-code-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: Run Snyk to check for code vulnerabilities
        uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
        with:
          args: --org=${{ secrets.SNYK_ORG_ID }} --severity-threshold=high
          command: code test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  snyk-monitor:
    runs-on: ubuntu-latest
    needs:
      - playstore_releases
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
      - name: Enable Snyk active monitoring to check for vulnerabilities
        uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
        with:
          args: --org=${{ secrets.SNYK_ORG_ID }} --severity-threshold=high
          command: monitor
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#
#  lint:
#    name: "Lint"
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu' # See 'Supported distributions' for available options
#          java-version: '17'
#
#      - name: Decode keystore credentials
#        uses: timheuer/base64-to-file@48657ba25c726c2e3dcf02efa3639fff9b3d587e
#        id: keystore_file
#        with:
#          fileName: "debugPreview.jks"
#          encodedString: ${{ secrets.RADIX_DEBUG_PREVIEW_KEYSTORE_FILE_BASE_64 }}
#
#      - name: "Run Lint"
#        run: ./gradlew lintDebug
#        env:
#          GPR_USER: ${{ secrets.GPR_USER }}
#          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
#          RADIX_DEBUG_PREVIEW_KEYSTORE_FILE: ${{ steps.keystore_file.outputs.filePath }}
#          RADIX_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.RADIX_ANDROID_KEYSTORE_PASSWORD }}
#          RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
#          RADIX_ANDROID_KEYSTORE_ALIAS: ${{ secrets.RADIX_ANDROID_KEYSTORE_ALIAS }}
#
#      - name: Upload lint results
#        uses: actions/upload-artifact@v3
#        with:
#          name: lint-results
#          path: app/build/reports/lint-results-debug.xml
#          retention-days: 1
#
#  unit_tests:
#    name: "Unit tests"
#    runs-on: ubuntu-latest
#
#    needs:
#      - lint
#
#    steps:
#      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu' # See 'Supported distributions' for available options
#          java-version: '17'
#
#      - name: Decode keystore credentials
#        uses: timheuer/base64-to-file@48657ba25c726c2e3dcf02efa3639fff9b3d587e
#        id: keystore_file
#        with:
#          fileName: "debugPreview.jks"
#          encodedString: ${{ secrets.RADIX_DEBUG_PREVIEW_KEYSTORE_FILE_BASE_64 }}
#
#      - name: "Run unit tests"
#        run: ./gradlew testDebugUnitTest
#        env:
#          GPR_USER: ${{ secrets.GPR_USER }}
#          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
#          RADIX_DEBUG_PREVIEW_KEYSTORE_FILE: ${{ steps.keystore_file.outputs.filePath }}
#          RADIX_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.RADIX_ANDROID_KEYSTORE_PASSWORD }}
#          RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
#          RADIX_ANDROID_KEYSTORE_ALIAS: ${{ secrets.RADIX_ANDROID_KEYSTORE_ALIAS }}
#
#  # snapshot_tests:
#  #   name: "Snapshot tests"
#  #   runs-on: ubuntu-latest
#
#  #   needs:
#  #     - lint
#
#  #   steps:
#  #     - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
#
#  #     - name: "Run snapshot tests"
#  #       run: echo "Hello World" # JUST A PLACEHOLDER, NEEDS TO BE REPLACED
#
#  # ui_tests:
#  #   name: "UI tests"
#  #   runs-on: ubuntu-latest
#
#  #   needs:
#  #     - lint
#
#  #   steps:
#  #     - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
#
#  #     - name: "Run UI tests"
#  #       run: echo "Hello World" # JUST A PLACEHOLDER, NEEDS TO BE REPLACED
#
#  static_analysis:
#    name: "Static analysis and SonarCloud"
#    runs-on: ubuntu-latest
#
#    continue-on-error: true
#
#    needs:
#      - unit_tests
#      # - snapshot_tests
#      # - ui_tests
#
#    steps:
#      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
#        with:
#          fetch-depth: 0
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu' # See 'Supported distributions' for available options
#          java-version: '17'
#
#      - uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
#        with:
#          name: lint-results
#          path: app/build/reports/
#
#      - name: Decode keystore credentials
#        uses: timheuer/base64-to-file@48657ba25c726c2e3dcf02efa3639fff9b3d587e
#        id: keystore_file
#        with:
#          fileName: "debugPreview.jks"
#          encodedString: ${{ secrets.RADIX_DEBUG_PREVIEW_KEYSTORE_FILE_BASE_64 }}
#
#      - name: Export vars
#        run: |
#          echo "GPR_USER=${{ secrets.GPR_USER }}" >> $GITHUB_ENV
#          echo "GPR_TOKEN=${{ secrets.GPR_TOKEN }}" >> $GITHUB_ENV
#          echo "RADIX_DEBUG_PREVIEW_KEYSTORE_FILE=${{ steps.keystore_file.outputs.filePath }}" >> $GITHUB_ENV
#          echo "RADIX_ANDROID_KEYSTORE_PASSWORD=${{ secrets.RADIX_ANDROID_KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
#          echo "RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD=${{ secrets.RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}" >> $GITHUB_ENV
#          echo "RADIX_ANDROID_KEYSTORE_ALIAS=${{ secrets.RADIX_ANDROID_KEYSTORE_ALIAS }}" >> $GITHUB_ENV
#          echo "SONAR_TOKEN=${{ secrets.BABYLON_WALLET_ANDROID_SONAR_TOKEN }}" >> $GITHUB_ENV
#
#      - name: "Run detekt"
#        run: |
#          env
#          ./gradlew detektMain
#
#      - name: "Run jacoco"
#        run: |
#          ./gradlew jacocoTestReport
#
#      - name: "Run Sonarcloud"
#        run: |
#          ./gradlew sonarqube
#
#  build:
#
#    name: "Build"
#    runs-on: ubuntu-latest
#
#    needs:
#      - static_analysis
#
#    steps:
#      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
#
#      - name: Dump context
#        uses: crazy-max/ghaction-dump-context@516dbb0c760f39b4cdd750ae095f1688780f68f4
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu' # See 'Supported distributions' for available options
#          java-version: '17'
#
#      - name: Decode keystore credentials
#        uses: timheuer/base64-to-file@48657ba25c726c2e3dcf02efa3639fff9b3d587e
#        id: keystore_file
#        with:
#          fileName: "debugPreview.jks"
#          encodedString: ${{ secrets.RADIX_DEBUG_PREVIEW_KEYSTORE_FILE_BASE_64 }}
#
#      - name: "Build"
#        run: |
#          ./gradlew assembleDebugPreview
#        env:
#          GPR_USER: ${{ secrets.GPR_USER }}
#          GPR_TOKEN: ${{ secrets.GPR_TOKEN }}
#          RADIX_DEBUG_PREVIEW_KEYSTORE_FILE: ${{ steps.keystore_file.outputs.filePath }}
#          RADIX_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.RADIX_ANDROID_KEYSTORE_PASSWORD }}
#          RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.RADIX_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
#          RADIX_ANDROID_KEYSTORE_ALIAS: ${{ secrets.RADIX_ANDROID_KEYSTORE_ALIAS }}
#
#      - name: Upload APK from PR
#        if: ${{ github.event_name == 'pull_request' }}
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ github.event.number }}
#          path: app/build/outputs/apk/debugPreview/
#          retention-days: 1

#  snyk-sbom:
#    runs-on: ubuntu-latest
#    needs:
#      - build
#    steps:
#      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
#      - name: Snyk SBOM
#        uses: snyk/actions/gradle-jdk17@b98d498629f1c368650224d6d212bf7dfa89e4bf # v0.4.0
#        with:
#          args: --format=cyclonedx1.4+json --json-file-output sbom.json
#          command: sbom
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#      - name: Upload SBOM artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: sbom
#          path: sbom.json
