
desc "Deploy alpha to Firebase"
lane :deployFirebaseAlpha do
    branch_name = git_branch
    commit = last_git_commit

    gradle(
        task: "assemble",
        flavor: "Debug",
        build_type: "Alpha",
    )
    firebase_app_distribution(
        app: ENV["FIREBASE_APP_ID"],
        release_notes: "Branch: " + branch_name + "\n" + "Commit: " + commit[:message],
        groups: ENV["GROUPS"]
    )
end

desc "Deploy Firebase Release App"
lane :deployFirebaseRelease do
    version_name = android_get_version_name(
        gradle_file: "app/build.gradle"
    )

    gradle(
        task: "assemble",
        flavor: "Release"
    )
    firebase_app_distribution(
        app: ENV["FIREBASE_APP_ID"],
        release_notes: "The release/" + version_name + " version that will be distributed to Google Play.",
        groups: ENV["GROUPS"]
    )
end

# Optional params:
# - track: beta, alpha, internal, production
#   defaults to production
# - version: <string>
#   defaults to the versionName defined in app/build.gradle
desc "Deploy Release"
lane :deployRelease do |options|
    track = options[:track] ||= 'production'

    testTracks = ['beta', 'alpha', 'internal']
    if testTracks.include?(track) == false && track != 'production'
        UI.user_error!("Track '#{track}' is not a valid. Valid tracks are: production, beta, alpha, internal")
    else
        UI.success "Starting release to PlayStore for '#{track}' track"
    end

    android_get_version_code(gradle_file: "app/build.gradle")
    android_get_version_name(gradle_file: "app/build.gradle")
    versionCode = Actions.lane_context[SharedValues::ANDROID_VERSION_CODE].to_i + 1
    versionName = options[:version] ||= Actions.lane_context[SharedValues::ANDROID_VERSION_NAME]
    android_set_version_code(
        version_code: versionCode,
        gradle_file: "app/build.gradle"
    )
    android_set_version_name(
        version_name: versionName,
        gradle_file: "app/build.gradle"
    )
    gradle(task: "bundleRelease")

    upload_to_play_store(
        track: track,
        aab: Actions.lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH],
        skip_upload_apk: true,
        skip_upload_images: true,
        skip_upload_screenshots: true,
        release_status: "draft",
        json_key_data: ENV['GOOGLE_PLAY_DEPLOYER_JSON_FILE']
    )

    git_commit(
        path: "app/build.gradle",
        message: "Version #{versionName} (#{versionCode}) distributed to PlayStore."
    )
    push_to_git_remote(
        remote_branch: ENV["RELEASE_BRANCH"],
        tags: false
    )
end
