plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
}

android {
    namespace 'rdx.works.peerdroid'
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk

        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "boolean", "DEBUG_MODE", "true"
        buildConfigField "String", "SIGNALING_SERVER_URL", '"wss://signaling-server-dev.rdx-works-main.extratools.works/"'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "SIGNALING_SERVER_URL", '"wss://signaling-server-rcnet.radixdlt.com/"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    // Hilt
    implementation libs.hilt
    kapt libs.hiltCompiler

    implementation libs.kotlinxSerialization


    implementation libs.ktorCore
    implementation libs.ktorOkhttp
    implementation libs.ktorCio
    implementation libs.ktorSerialization
    implementation libs.ktorJson
    implementation libs.ktorContentNegotiation
    implementation libs.ktorLogging
    // SLF4J binding for ktor logging
    implementation libs.slf4j

    implementation project(":webrtc-library")
    implementation project(':core')

    //Timber
    implementation libs.timber
    
    testImplementation libs.junit
    testImplementation libs.retKotlin
    testImplementation libs.kotlinTestJunit
    testImplementation libs.coroutinesTest
}
