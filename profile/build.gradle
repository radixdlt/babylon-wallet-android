plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.hilt
    alias libs.plugins.ksp
    alias libs.plugins.kotlin.serialization
}

android {
    namespace 'rdx.works.profile'
    compileSdk rootProject.ext.compileSdk

    defaultConfig {
        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.targetSdk
    }

    buildTypes {
        debugAlpha {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    packagingOptions {
        resources {
            excludes += "META-INF/DEPENDENCIES"
        }
    }
    testOptions {
        // Caution: Take care when setting the returnDefaultValues property to true.
        // The null/zero return values can introduce regressions to your tests,
        // which are hard to debug and might allow failing tests to pass.
        //
        // It is now used to not make the unit tests fail because of the Log class
        unitTests.returnDefaultValues = true
    }
    afterEvaluate {
        tasks.configureEach { task ->
            if (task.name.contains("Test") && task.name.contains("compile")) {
                kotlinOptions.freeCompilerArgs += '-Xopt-in=com.radixdlt.sargon.annotation.UsesSampleValues'
            }
        }
    }
}

dependencies {
    // Hilt
    implementation libs.hilt
    ksp libs.hiltCompiler
    // Hilt WorkerManager
    implementation libs.androidXHiltWorker
    ksp libs.androidXHiltCompiler

    implementation libs.kotlinxSerialization
    implementation project(path: ':core')
    // Import it to find out gradient lists for appearanceId
    implementation project(path: ':designsystem')

    // Datastore
    implementation libs.datastorePreferences

    // Google API Auth and Drive
    api(libs.googleApiClient) {
        exclude group: "org.apache.httpcomponents", module: "guava-jdk5"
    }
    api(libs.playServicesAuth) {
        exclude group: "com.google.http-client", module: "google-http-client"
        exclude group: "com.google.http-client", module: "google-http-client-jackson"
    }
    api(libs.googleApiServicesDrive) {
        exclude group: "org.apache.httpcomponents", module: "guava-jdk5"
    }
    // WorkManager for cloud sync
    implementation libs.workManagerRuntimeKtx

    //Timber
    implementation libs.timber

    // For HttpUrl support
    implementation platform(libs.okhttpBom)
    implementation libs.okhttp

    testImplementation libs.junit
    testImplementation libs.kotlinTestJunit
    testImplementation libs.coroutinesTest
    testImplementation libs.mockk
    testImplementation libs.mockitoKotlin
    testImplementation libs.mockitoInline
    testImplementation libs.jsonAssert
    testRuntimeOnly libs.sargonDesktop
}
